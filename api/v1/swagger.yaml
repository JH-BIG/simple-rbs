# Simple Meeting Room Managment API
swagger: '2.0'
info:
  title: SMR API
  description: Simple Meeting Room Booking System API
  version: "0.0.2"
# the domain of the service
#host: simple-rbs.mybluemix.net
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/smr/v1
produces:
  - application/json
paths:
  /site:
    get:
      summary: Get a site information
      tags: [Site API]
      parameters:
      - name : siteid
        in: query
        type: string
        required: true
        description: ex. 3IFC
      responses:
        200:
          description: Information of the site
          schema:
            $ref: '#/definitions/SiteObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a site
      tags: [Site API, Admin API]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SiteObject'
      responses:
        200:
          description: OK
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json: |-
              {
                "error": "conflict",
                "reason": "Document update conflict.",
                "statusCode": 409
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update information of a site
      description: currently N/A
      tags: [Site API, Admin API,  N/A]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SiteObject'
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Inactivate a site ( inactivate all rooms in this site )
      description: currently N/A
      tags: [Site API, Admin API,  N/A]
      parameters:
      - name : siteid
        in: query
        type: string
        required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /site/list:
    get:
      summary: Get all site list
      tags: [Site API]
      responses:
        200:
          description: list of the site
          schema:
            type: array
            items:
              $ref: '#/definitions/SiteObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /site/rooms:
    get:
      summary: Get the room list of the given site
      tags: [Site API]
      parameters:
      - name : siteid
        in: query
        type: string
        required: true
      responses:
        200:
          description: List of rooms
          schema:
            type: array
            items:
              $ref: '#/definitions/RoomObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /site/rooms/byfloor:
    get:
      summary: Get the room list on given floor
      tags: [Site API]
      parameters:
      - name : siteid
        in: query
        type: string
        required: true
      - name : floor
        in: query
        type: number
        required: true
      responses:
        200:
          description: List of rooms
          schema:
            type: array
            items:
              $ref: '#/definitions/RoomObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /room:
    get:
      summary: Get the room information
      tags: [Room API]
      parameters:
      - name : roomid
        in: query
        type: string
        required: true
      responses:
        200:
          description: Information of the meeting room
          schema:
            $ref: '#/definitions/RoomObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create the room
      tags: [Room API, Admin API]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RoomObject'
      responses:
        200:
          description: OK
        404:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json: |-
              {
                "error": "failed to create a room",
                "reason": "The site is not exist.",
                "statusCode": 404
              }
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json: |-
              {
                "error": "conflict",
                "reason": "Document update conflict.",
                "statusCode": 409
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update information of a room
      description: currently N/A
      tags: [Room API, Admin API, N/A]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RoomObject'
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Inactivate a room (remove all reserved events in this room)
      description: currently N/A
      tags: [Room API, Admin API,  N/A]
      parameters:
      - name : roomid
        in: query
        type: string
        required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /freebusy/available:
    get:
      summary: Get available rooms with given capacity and duration
      tags: [Freebusy API]
      parameters:
      - name : siteid
        in: query
        type: string
        required: true
      - name : capacity
        in: query
        type: integer
        format: int32
        required: true
      - name : start
        in: query
        type: integer
        format: int64
        required: true
      - name : end
        in: query
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: An array of available rooms
          schema:
            type: array
            items:
              $ref: '#/definitions/RoomObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /freebusy/room:
    get:
      summary: Get free-busy data for the selected single room
      tags: [Freebusy API]
      parameters:
      - name : roomid
        in: query
        type: string
        required: true
      - name : start
        in: query
        type: integer
        format: int64
        required: true
      - name : end
        in: query
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: freebusy status
          schema:
            $ref: '#/definitions/FreeBusyStatus'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /book:
    post:
      summary: Book on the room
      tags: [Reservation API]
      parameters:
      - name: body
        in: body
        schema:
          $ref: '#/definitions/BookingObject'
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get the booked event
      tags: [Reservation API]
      parameters:
      - name: eventid
        in: query
        type: string
        required: true
      - name: roomid
        in: query
        type: string
        required: true
      responses:
        200:
          description: event
          schema:
            $ref: '#/definitions/EventObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete the booked event on the room
      tags: [Reservation API]
      parameters:
      - name: eventid
        in: query
        type: string
        required: true
      - name: roomid
        in: query
        type: string
        required: true
      - name: userid
        in: query
        type: string
        required: true
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /book/search/bysite:
    get:
      summary: Get reservations for a site
      tags: [Reservation API]
      parameters:
      - name: siteid
        in: query
        type: string
        required: true
      - name: start
        description: start datetime to query
        in: query
        type: integer
        format: int64
        required: true
      - name: end
        in: query
        description: end datetime to query
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: Reserved event list
          schema:
            type: array
            items:
              $ref: '#/definitions/EventObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /book/search/byuser:
    get:
      summary: Get reservations for a site and user(subscriber)
      tags: [Reservation API]
      parameters:
      - name: siteid
        in: query
        type: string
        required: true
      - name: userid
        in: query
        type: string
        required: true
      - name: start
        description: start datetime to query
        in: query
        type: integer
        format: int64
        required: true
      - name: end
        in: query
        description: end datetime to query
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: Reserved event list
          schema:
            type: array
            items:
              $ref: '#/definitions/EventObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /book/search/byroom:
    get:
      summary: Get reservation of the room
      tags: [Reservation API]
      parameters:
      - name: roomid
        in: query
        type: string
        required: true
      - name: start
        description: start datetime to query
        in: query
        type: integer
        format: int64
        required: true
      - name: end
        description: end datetime to query
        in: query
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: Reserved event list
          schema:
            type: array
            items:
              $ref: '#/definitions/EventObject'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  SiteObject:
    type: object
    required: ['siteid']
    properties:
      siteid:
        type: string
        example: 3IFC
      location:
        type: string
        example: Seoul/Korea
  RoomObject:
    type: object
    required: ['roomid', 'siteid', 'capacity']
    properties:
      roomid:
        type: string
        example: 12M12/Monitor/10/3IFC
      siteid:
        type: string
        example: 3IFC
      capacity:
        type: integer
        format: int32
        example: 10
      phone:
        type: string
        example: '+82-02-1234-0000'
      floor:
        type: string
        example: 12
      facilities:
        type: string
        example: Monitor
      timezone:
        type: string
        example: Asia/Seoul
  BookingObject:
    type: object
    required: ['roomid', 'start', 'end', 'purpose', 'user']
    properties:
      roomid:
        type: string
        example: 12M12/Monitor/10/3IFC
      start:
        type: integer
        format: int64
        example: 1480518000000
      end:
        type: integer
        format: int64
        example: 1480521600000
      purpose:
        type: string
        example: quick review
      attendees:
        type: integer
        format: int32
        example: 5
      user:
        $ref: '#/definitions/User'
  EventObject:
    type: object
    required: ['eventid', 'roomid', 'start', 'end', 'purpose', 'user']
    properties:
      eventid:
        type: string
        example: 1234
      roomid:
        type: string
        example: 12M12/Monitor/10/3IFC
      start:
        type: integer
        format: int64
        example: 1480518000000
      end:
        type: integer
        format: int64
        example: 1480521600000
      purpose:
        type: string
        example: quick review
      user:
        $ref: '#/definitions/User'
  User:
    type: object
    required: ['userid', 'name', 'email']
    properties:
      userid:
        type: string
        example: john.doe@acme.ibm.com
      name:
        type: string
        example: John Doe/ACME
      email:
        type: string
        example: john.doe@acme.ibm.com
      phone:
        type: string
        example: +82-01-1234-0000
  FreeBusyStatus:
    type: object
    required: ['roomid', 'freebusy']
    properties:
      roomid:
        type: string
        example: 12M12/Monitor/10/3IFC
      freebusy:
        type: array
        items:
          $ref: '#/definitions/FreeBusy'
  FreeBusy:
    type: object
    required: ['start', 'end', 'duration']
    properties:
      start:
        type: integer
        format: int64
        example: 1480518000000
      end:
        type: integer
        format: int64
        example: 1480521600000
      duration:
        type: integer
        format: int64
        example: 3600000
  Error:
    type: object
    properties:
      error:
        type: string
        example: failed to get document
      reason:
        type: string
        example: insufficient parameter
      statusCode:
        type: integer
        format: int32
        example: 500